{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","utils/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.jsx","pages/Budget/components/BudgetCategoryList/ParentCategory.jsx","pages/Budget/components/BudgetCategoryList/CategoryItem.jsx","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.jsx"],"names":["fetchBudget","key","a","id","fetch","process","response","json","data","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","responseData","deleteTransaction","transactionId","editTransaction","dataOutput","fetchAllCategories","budget","common","formatCurrency","value","lang","number","Number","currency","Intl","NumberFormat","style","format","formatDate","dateString","date","Date","DateTimeFormat","Category","styled","div","theme","colors","grey","dark","spacing","xs","ParentCategory","normal","CategoryItem","light","CategoryAmount","span","negative","red","green","name","onClick","categories","transactions","amount","activeLanguage","useTranslation","i18n","language","categoryLeftValue","useMemo","budgeted","reduce","acc","category","error","spentOnParentCategory","filter","transaction","find","categoryId","amountValue","item","spentOnCategory","totalLeft","BudgetCategoryList","useQuery","API","allCategories","budgetedCategories","dispatch","useContext","budgetContext","setSelectedParentCategoryId","useCallback","type","SELECT_PARENT_CATEGORY_ID","payload","t","handleClickParentCategoryRef","useRef","budgetedCategoriesByParent","groupBy","parentCategory","handleClearParentCategorySelect","current","handleSelectRestParentCategories","listItems","Object","entries","map","parentName","Trigger","children","budgetedCategory","totalSpent","restToSpend","totalAmount","amountTaken","categoryExpenses","Math","max","notBudgetedTransactions","notBudgetedExpenses","availableForRestCategories","items","clickRef"],"mappings":"odAAaA,EAAW,uCAAG,WAAOC,EAAP,sBAAAC,EAAA,6DAAcC,EAAd,EAAcA,GAAd,SACAC,MAAM,GAAD,OAAIC,wBAAJ,oBAA6CF,EAA7C,0BADL,cACjBG,EADiB,gBAEJA,EAASC,OAFL,cAEjBC,EAFiB,yBAIhBA,GAJgB,2CAAH,wDAOXC,EAAuB,uCAAG,WAAOR,EAAP,sBAAAC,EAAA,6DAAcC,EAAd,EAAcA,GAAd,SACZC,MAAM,GAAD,OAAIC,wBAAJ,oBAA6CF,EAA7C,sBADO,cAC7BG,EAD6B,gBAEhBA,EAASC,OAFO,cAE7BC,EAF6B,yBAI5BA,GAJ4B,2CAAH,wDAOvBE,EAAc,uCAAG,mCAAAR,EAAA,6DAASS,EAAT,EAASA,SAAUH,EAAnB,EAAmBA,KAAnB,SACHJ,MAAM,GAAD,OACrBC,wBADqB,oBACoBM,EADpB,iBAExB,CACIC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KARH,cACpBF,EADoB,gBAWCA,EAASC,OAXV,cAWpBU,EAXoB,yBAanBA,GAbmB,2CAAH,sDAgBdC,EAAiB,uCAAG,WAAMC,GAAN,iBAAAjB,EAAA,sEACNE,MAAM,GAAD,OACrBC,wBADqB,yBACyBc,GACjD,CACIP,OAAQ,WAJa,cACvBN,EADuB,gBAOVA,EAASC,OAPC,cAOvBC,EAPuB,yBAStBA,GATsB,2CAAH,sDAYjBY,EAAe,uCAAG,mCAAAlB,EAAA,6DAASiB,EAAT,EAASA,cAAeX,EAAxB,EAAwBA,KAAxB,SACJJ,MAAM,GAAD,OACrBC,wBADqB,yBACyBc,GACjD,CACIP,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KARF,cACrBF,EADqB,gBAWFA,EAASC,OAXP,cAWrBc,EAXqB,yBAapBA,GAboB,2CAAH,sDC1CfC,EAAkB,uCAAG,8BAAApB,EAAA,sEACPE,MAAM,GAAD,OAAIC,wBAAJ,wCADE,cACxBC,EADwB,gBAEXA,EAASC,OAFE,cAExBC,EAFwB,yBAIvBA,GAJuB,2CAAH,qDCGzBJ,EAAQ,CACVmB,SACAC,UAGWpB,O,gCCRf,oEAAO,IAAMqB,EAAiB,SAACC,GAAwB,IAAjBC,EAAgB,uDAAT,KACnCC,EAASC,OAAOH,GAEhBI,EAAY,WACd,OAAQH,GACJ,IAAK,KACD,MAAO,MAEX,QACI,MAAO,OAND,GAUlB,OAAO,IAAII,KAAKC,aAAaL,EAAM,CAAEM,MAAO,WAAYH,SAAUA,IAAYI,OAAON,IAG5EO,EAAa,SAACC,GAA6B,IAAjBT,EAAgB,uDAAT,KACpCU,EAAO,IAAIC,KAAKF,GAEtB,OAAO,IAAIL,KAAKQ,eAAeZ,GAAMO,OAAOG,K,moBCjBzC,IAAMG,EAAWC,UAAOC,IAAV,KAGG,qBAAGC,MAAkBC,OAAOC,KAAKC,QAC1C,qBAAGH,MAAkBI,QAAQC,MAG/BC,EAAiBR,kBAAOD,EAAPC,CAAH,KACH,qBAAGE,MAAkBC,OAAOC,KAAKK,UAG5CC,EAAeV,kBAAOD,EAAPC,CAAH,KACD,qBAAGE,MAAkBC,OAAOC,KAAKO,SAG5CC,EAAiBZ,UAAOa,KAAV,KAEd,gBAAGX,EAAH,EAAGA,MAAH,SAAUY,SAA0BZ,EAAMC,OAAOY,IAAIN,OAASP,EAAMC,OAAOa,MAAMP,UC6B/ED,EA1CQ,SAAC,GAAyD,IAAvDS,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAEzDC,EADWC,cAATC,KACoBC,SAEtBC,EAAoBC,mBAAQ,WAC9B,GAAMN,EAAQ,OAAO,KAErB,IAAMO,EAAY,WACd,IACI,OAAOT,EAAWU,QAAO,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,EAASjD,SAAQ,GACrE,MAAOkD,GACL,OAAO,MAJG,GAWZC,EAH6Bb,EAC9Bc,QAAO,SAAAC,GAAW,OAAIhB,EAAWiB,MAAK,SAAAL,GAAQ,OAAIA,EAASM,aAAeF,EAAYE,iBAGtFR,QAAO,SAACC,EAAKK,GAAN,OAAsBL,EAAMK,EAAYd,SAAQ,GAI5D,OAFkBO,EAAWA,EAAWK,EAAwB,OAIjE,CAACd,EAAYC,EAAcC,IAExBiB,EAAcX,mBAChB,kBAAMN,GAAUK,IAChB,CAACL,EAAQK,IAGb,OACI,eAAC,EAAD,CAAMR,QAASA,EAAf,UACI,+BAAOD,IACP,cAACL,EAAD,CAAgBE,SAAUwB,EAAc,EAAxC,SACKtD,YAAesD,EAAahB,SChB9BZ,EApBM,SAAC,GAAkC,IAAhCO,EAA+B,EAA/BA,KAAMsB,EAAyB,EAAzBA,KAAMnB,EAAmB,EAAnBA,aAE1BE,EADWC,cAATC,KACoBC,SAKtBe,EAHuBpB,EACxBc,QAAO,SAAAC,GAAW,OAAIA,EAAYE,aAAeE,EAAK7E,MAEdmE,QAAO,SAACC,EAAKK,GAAN,OAAsBL,EAAMK,EAAYd,SAAQ,GAC9FoB,EAAYF,EAAKzD,OAAS0D,EAEhC,OACI,eAAC,EAAD,WACI,+BAAOvB,IACP,cAACL,EAAD,CAAgBE,SAAU2B,EAAY,EAAtC,SACKzD,YAAeyD,EAAWnB,S,uKCqGJ,qBAAGpB,MAAkBC,OAAOC,KAAKO,S,6IAepC,qBAAGT,MAAkBC,OAAOC,KAAKO,SActD+B,EAvIY,WAAO,IAChB5D,EAAW6D,YAAS,CAAC,SAAU,CAAEjF,GAAI,IAAMkF,IAAI9D,OAAOvB,aAA5DQ,KACM8E,EAAkBF,YAAS,CAAC,iBAAkBC,IAAI7D,OAAOF,oBAA/Dd,KACM+E,EAAuBH,YAAS,CAAC,qBAAsB,CAAEjF,GAAI,IAAMkF,IAAI9D,OAAOd,yBAApFD,KAEAgF,EAAaC,qBAAWC,KAAxBF,SAEFG,EAA8BC,uBAAY,SAAAzF,GAAE,OAAIqF,EAAS,CAC3DK,KAAMC,IACNC,QAAS5F,MAET,CAACqF,IAGGQ,EAAMhC,cAANgC,EACFC,EAA+BC,iBAAO,MAEtCC,EAA6B/B,mBAAQ,kBAAMgC,kBAC7Cb,GACA,SAAAP,GAAI,OAAIM,EAAcT,MAAK,SAAAL,GAAQ,OAAIA,EAASrE,KAAO6E,EAAKF,cAAYuB,eAAe3C,UAEvF,CAAC6B,EAAoBD,IAGnBgB,EAAkCV,uBAAY,WAChDD,IACAM,EAA6BM,YAE7B,CAACZ,EAA6BM,IAE5BO,EAAmCZ,uBAAY,WACjDD,EAA4B,MAC5BM,EAA6BM,YAE7B,CAACZ,EAA6BM,IAG5BQ,EAAYrC,mBAAQ,kBAAMsC,OAAOC,QAAQR,GAA4BS,KAAI,mCAAEC,EAAF,KAAcjD,EAAd,WAA+B,CAC1GzD,GAAI0G,EACJC,QAAS,gBAAGnD,EAAH,EAAGA,QAAH,OACL,cAAC,EAAD,CACID,KAAMmD,EACNlD,QAAS,WACLA,EAAQkD,GACRlB,EAA4BkB,IAEhCjD,WAAYA,EACZC,aAActC,EAAOsC,gBAG7BkD,SAAUnD,EAAWgD,KAAI,SAAAI,GAAqB,IAClCtD,EAAS4B,EAAcT,MAAK,SAAAL,GAAQ,OAAIA,EAASrE,KAAO6G,EAAiBlC,cAAzEpB,KAER,OAAQ,cAAC,EAAD,CAEJA,KAAMA,EACNsB,KAAMgC,EACNnD,aAActC,EAAOsC,cAHhBmD,EAAiB7G,aAQ9B,CAACmF,EAAe/D,EAAOsC,aAAcsC,EAA4BR,IAG/DsB,EAAa7C,mBAAQ,kBAAM7C,EAAOsC,aACnCS,QAAO,SAACC,EAAKK,GAAN,OAAsBL,EAAMK,EAAYd,SAAQ,KACxD,CAACvC,EAAOsC,eAGNqD,EAAc9C,mBAAQ,kBAAM7C,EAAO4F,YAAcF,IACnD,CAAC1F,EAAO4F,YAAaF,IAGnBG,EAAchD,mBAAQ,kBAAMmB,EAAmBjB,QAAO,SAACC,EAAKyC,GAC9D,IAEMK,EAFuB9F,EAAOsC,aAC/Bc,QAAO,SAAAC,GAAW,OAAIA,EAAYE,aAAekC,EAAiB7G,MAElEmE,QAAO,SAACC,EAAKK,GAAN,OAAsBL,EAAMK,EAAYd,SAAQ,GAE5D,OAAOS,EAAM+C,KAAKC,IAAIP,EAAiBzF,OAAQ8F,KAChD,KACC,CAAC9B,EAAoBhE,EAAOsC,eAG1B2D,EAA0BpD,mBAAQ,kBAAM7C,EAAOsC,aAChDc,QAAO,SAAAC,GACJ,OAAQW,EACHV,MAAK,SAAAmC,GAAgB,OAAIA,EAAiB7G,KAAOyE,EAAYE,mBAEtE,CAACvD,EAAOsC,aAAc0B,IAGpBkC,EAAsBrD,mBAAQ,kBAAMoD,EACrClD,QAAO,SAACC,EAAKK,GAAN,OAAsBL,EAAMK,EAAYd,SAAQ,KACxD,CAAC0D,IAGCE,EAA6BtD,mBAAQ,kBAAM7C,EAAO4F,YAAcC,EAAcK,IAChF,CAAClG,EAAO4F,YAAaC,EAAaK,IAGtC,OACI,gCACI,0BAKI,cAAC,EAAD,CACI/D,KAAMnC,EAAOmC,KACbI,OAAQoD,EACRvD,QAAS2C,MAGjB,cAAC,IAAD,CACIqB,MAAOlB,EACPmB,SAAU3B,IAEd,0BAKI,cAAC,EAAD,CACIvC,KAAMsC,EAAE,oBACRlC,OAAQ4D,EACR/D,QAAS6C","file":"static/js/7.b3befd7c.chunk.js","sourcesContent":["export const fetchBudget = async (key, { id }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const fetchBudgetedCategories = async (key, { id }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const addTransaction = async ({ budgetId, data }) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n    );\r\n    const responseData = await response.json();\r\n\r\n    return responseData;\r\n}\r\n\r\nexport const deleteTransaction = async transactionId => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/transactions/${transactionId}`,\r\n        {\r\n            method: \"DELETE\",\r\n        }\r\n    );\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const editTransaction = async ({ transactionId, data }) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/transactions/${transactionId}`,\r\n        {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n    );\r\n    const dataOutput = await response.json();\r\n\r\n    return dataOutput;\r\n}","export const fetchAllCategories = async () => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n","import * as budget from './budget.fetch';\r\nimport * as common from './common.fetch';\r\n\r\nconst fetch = {\r\n    budget,\r\n    common,\r\n}\r\n\r\nexport default fetch;","export const formatCurrency = (value, lang = 'en') => {\r\n    const number = Number(value);\r\n\r\n    const currency = (() => {\r\n        switch (lang) {\r\n            case 'pl':\r\n                return 'PLN'\r\n\r\n            default:\r\n                return 'USD'\r\n        }\r\n    })();\r\n\r\n    return new Intl.NumberFormat(lang, { style: 'currency', currency: currency }).format(number)\r\n};\r\n\r\nexport const formatDate = (dateString, lang = 'en') => {\r\n    const date = new Date(dateString);\r\n\r\n    return new Intl.DateTimeFormat(lang).format(date);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Category = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border: 1px solid ${({ theme }) => theme.colors.grey.dark};\r\n    padding: ${({ theme }) => theme.spacing.xs}px;\r\n`;\r\n\r\nexport const ParentCategory = styled(Category)`\r\n    background-color: ${({ theme }) => theme.colors.grey.normal};\r\n`;\r\n\r\nexport const CategoryItem = styled(Category)`\r\n    background-color: ${({ theme }) => theme.colors.grey.light};\r\n`;\r\n\r\nexport const CategoryAmount = styled.span`\r\n    font-weight: 700;\r\n    color: ${({ theme, negative }) => negative ? theme.colors.red.normal : theme.colors.green.normal}\r\n`;","import React, { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { formatCurrency } from 'utils';\r\nimport { ParentCategory as Root, CategoryAmount } from './BudgetCategoryList.css';\r\n\r\nconst ParentCategory = ({ name, onClick, categories, transactions, amount }) => {\r\n    const { i18n } = useTranslation()\r\n    const activeLanguage = i18n.language;\r\n\r\n    const categoryLeftValue = useMemo(() => {\r\n        if (!!amount) return null;\r\n\r\n        const budgeted = (() => {\r\n            try {\r\n                return categories.reduce((acc, category) => acc + category.budget, 0);\r\n            } catch (error) {\r\n                return null;\r\n            }\r\n        })();\r\n\r\n        const parentCategoryTransactions = transactions\r\n            .filter(transaction => categories.find(category => category.categoryId === transaction.categoryId));\r\n\r\n        const spentOnParentCategory = parentCategoryTransactions\r\n            .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n        const totalLeft = budgeted ? budgeted - spentOnParentCategory : null;\r\n\r\n        return totalLeft;\r\n\r\n    }, [categories, transactions, amount]);\r\n\r\n    const amountValue = useMemo(\r\n        () => amount || categoryLeftValue,\r\n        [amount, categoryLeftValue]\r\n    );\r\n\r\n    return (\r\n        <Root onClick={onClick}>\r\n            <span>{name}</span>\r\n            <CategoryAmount negative={amountValue < 0}>\r\n                {formatCurrency(amountValue, activeLanguage)}\r\n            </CategoryAmount>\r\n        </Root>\r\n    );\r\n}\r\n\r\nexport default ParentCategory;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { formatCurrency } from 'utils';\r\nimport { CategoryItem as Root, CategoryAmount } from './BudgetCategoryList.css';\r\n\r\nconst CategoryItem = ({ name, item, transactions }) => {\r\n    const { i18n } = useTranslation()\r\n    const activeLanguage = i18n.language;\r\n\r\n    const categoryTransactions = transactions\r\n        .filter(transaction => transaction.categoryId === item.id);\r\n\r\n    const spentOnCategory = categoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\r\n    const totalLeft = item.budget - spentOnCategory;\r\n\r\n    return (\r\n        <Root>\r\n            <span>{name}</span>\r\n            <CategoryAmount negative={totalLeft < 0}>\r\n                {formatCurrency(totalLeft, activeLanguage)}\r\n            </CategoryAmount>\r\n        </Root>\r\n    );\r\n}\r\n\r\nexport default CategoryItem;","import React, { useRef, useMemo, useCallback, useContext } from 'react';\r\nimport { groupBy } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nimport 'styled-components/macro'; // pobieramy cały katalog. To jest potrzebne do dodawanie inlinowo stylów css do styled components\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { ToggleableList } from 'components';\r\nimport ParentCategory from './ParentCategory';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nimport { budgetContext } from 'data/context/budget.context';\r\n\r\nimport API from 'data/fetch';\r\nimport { SELECT_PARENT_CATEGORY_ID } from 'data/constants';\r\n\r\nconst BudgetCategoryList = () => {\r\n    const { data: budget } = useQuery(['budget', { id: 1 }], API.budget.fetchBudget);\r\n    const { data: allCategories } = useQuery(['allCategories'], API.common.fetchAllCategories);\r\n    const { data: budgetedCategories } = useQuery(['budgetedCategories', { id: 1 }], API.budget.fetchBudgetedCategories);\r\n\r\n    const { dispatch } = useContext(budgetContext);\r\n\r\n    const setSelectedParentCategoryId = useCallback(id => dispatch({\r\n        type: SELECT_PARENT_CATEGORY_ID,\r\n        payload: id,\r\n    }),\r\n        [dispatch]\r\n    );\r\n\r\n    const { t } = useTranslation();\r\n    const handleClickParentCategoryRef = useRef(null);\r\n\r\n    const budgetedCategoriesByParent = useMemo(() => groupBy(\r\n        budgetedCategories,\r\n        item => allCategories.find(category => category.id === item.categoryId).parentCategory.name\r\n    ),\r\n        [budgetedCategories, allCategories]\r\n    );\r\n\r\n    const handleClearParentCategorySelect = useCallback(() => {\r\n        setSelectedParentCategoryId();\r\n        handleClickParentCategoryRef.current();\r\n    },\r\n        [setSelectedParentCategoryId, handleClickParentCategoryRef]\r\n    );\r\n    const handleSelectRestParentCategories = useCallback(() => {\r\n        setSelectedParentCategoryId(null);\r\n        handleClickParentCategoryRef.current();\r\n    },\r\n        [setSelectedParentCategoryId, handleClickParentCategoryRef]\r\n    );\r\n\r\n    const listItems = useMemo(() => Object.entries(budgetedCategoriesByParent).map(([parentName, categories]) => ({\r\n        id: parentName,\r\n        Trigger: ({ onClick }) => (\r\n            <ParentCategory\r\n                name={parentName}\r\n                onClick={() => {\r\n                    onClick(parentName);\r\n                    setSelectedParentCategoryId(parentName);\r\n                }}\r\n                categories={categories}\r\n                transactions={budget.transactions}\r\n            />\r\n        ),\r\n        children: categories.map(budgetedCategory => {\r\n            const { name } = allCategories.find(category => category.id === budgetedCategory.categoryId);\r\n\r\n            return (<CategoryItem\r\n                key={budgetedCategory.id}\r\n                name={name}\r\n                item={budgetedCategory}\r\n                transactions={budget.transactions}\r\n            />)\r\n        }\r\n        ),\r\n    })),\r\n        [allCategories, budget.transactions, budgetedCategoriesByParent, setSelectedParentCategoryId]\r\n    );\r\n\r\n    const totalSpent = useMemo(() => budget.transactions\r\n        .reduce((acc, transaction) => acc + transaction.amount, 0),\r\n        [budget.transactions]\r\n    );\r\n\r\n    const restToSpend = useMemo(() => budget.totalAmount - totalSpent,\r\n        [budget.totalAmount, totalSpent]\r\n    );\r\n\r\n    const amountTaken = useMemo(() => budgetedCategories.reduce((acc, budgetedCategory) => {\r\n        const categoryTransactions = budget.transactions\r\n            .filter(transaction => transaction.categoryId === budgetedCategory.id);\r\n        const categoryExpenses = categoryTransactions\r\n            .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n        return acc + Math.max(budgetedCategory.budget, categoryExpenses);\r\n    }, 0),\r\n        [budgetedCategories, budget.transactions]\r\n    );\r\n\r\n    const notBudgetedTransactions = useMemo(() => budget.transactions\r\n        .filter(transaction => {\r\n            return !budgetedCategories\r\n                .find(budgetedCategory => budgetedCategory.id === transaction.categoryId)\r\n        }),\r\n        [budget.transactions, budgetedCategories]\r\n    );\r\n\r\n    const notBudgetedExpenses = useMemo(() => notBudgetedTransactions\r\n        .reduce((acc, transaction) => acc + transaction.amount, 0),\r\n        [notBudgetedTransactions]\r\n    );\r\n\r\n    const availableForRestCategories = useMemo(() => budget.totalAmount - amountTaken - notBudgetedExpenses,\r\n        [budget.totalAmount, amountTaken, notBudgetedExpenses]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                css={`\r\n            border-bottom: 5px solid ${({ theme }) => theme.colors.grey.light};\r\n            `}\r\n            >\r\n                <ParentCategory\r\n                    name={budget.name}\r\n                    amount={restToSpend}\r\n                    onClick={handleClearParentCategorySelect}\r\n                />\r\n            </div>\r\n            <ToggleableList\r\n                items={listItems}\r\n                clickRef={handleClickParentCategoryRef}\r\n            />\r\n            <div\r\n                css={`\r\n            border-top: 5px solid ${({ theme }) => theme.colors.grey.light};\r\n            `}\r\n            >\r\n                <ParentCategory\r\n                    name={t('Other categories')}\r\n                    amount={availableForRestCategories}\r\n                    onClick={handleSelectRestParentCategories}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BudgetCategoryList;"],"sourceRoot":""}