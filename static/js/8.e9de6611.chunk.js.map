{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","utils/index.js","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.css.jsx","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.jsx"],"names":["fetchBudget","key","a","id","fetch","process","response","json","data","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","responseData","deleteTransaction","transactionId","editTransaction","dataOutput","fetchAllCategories","budget","common","formatCurrency","value","lang","number","Number","currency","Intl","NumberFormat","style","format","formatDate","dateString","date","Date","DateTimeFormat","List","styled","ul","theme","spacing","xs","ListItem","li","colors","grey","dark","BudgetTransactionList","useQuery","API","allCategories","budgetedCategories","history","useHistory","selectedParentCategoryId","useContext","budgetContext","useTranslation","i18n","t","activeLanguage","language","filteredTransactionsBySelectedParentCategory","useMemo","transactions","filter","transaction","some","budgetedCategory","categoryId","find","category","parentCategory","name","error","groupedTransactions","groupBy","getUTCDate","Object","entries","map","to","description","amount","onClick","e","preventDefault","push","editTransactionButtonHandler","deleteTransactionButtonHandler"],"mappings":"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","file":"static/js/8.e9de6611.chunk.js","sourcesContent":["export const fetchBudget = async (key, { id }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const fetchBudgetedCategories = async (key, { id }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const addTransaction = async ({ budgetId, data }) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n    );\r\n    const responseData = await response.json();\r\n\r\n    return responseData;\r\n}\r\n\r\nexport const deleteTransaction = async transactionId => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/transactions/${transactionId}`,\r\n        {\r\n            method: \"DELETE\",\r\n        }\r\n    );\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const editTransaction = async ({ transactionId, data }) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/transactions/${transactionId}`,\r\n        {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n    );\r\n    const dataOutput = await response.json();\r\n\r\n    return dataOutput;\r\n}","export const fetchAllCategories = async () => {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n","import * as budget from './budget.fetch';\r\nimport * as common from './common.fetch';\r\n\r\nconst fetch = {\r\n    budget,\r\n    common,\r\n}\r\n\r\nexport default fetch;","export const formatCurrency = (value, lang = 'en') => {\r\n    const number = Number(value);\r\n\r\n    const currency = (() => {\r\n        switch (lang) {\r\n            case 'pl':\r\n                return 'PLN'\r\n\r\n            default:\r\n                return 'USD'\r\n        }\r\n    })();\r\n\r\n    return new Intl.NumberFormat(lang, { style: 'currency', currency: currency }).format(number)\r\n};\r\n\r\nexport const formatDate = (dateString, lang = 'en') => {\r\n    const date = new Date(dateString);\r\n\r\n    return new Intl.DateTimeFormat(lang).format(date);\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    margin-top: 20px;\r\n\r\n    > li+li {\r\n        margin-top: ${({ theme }) => theme.spacing.xs}px;\r\n    }\r\n\r\n    li {\r\n        margin: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n\r\n    a {\r\n        border: 1px solid ${({ theme }) => theme.colors.grey.dark};\r\n        padding: ${({ theme }) => theme.spacing.xs}px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        color: inherit;\r\n        text-decoration: inherit;\r\n\r\n        &:visited {\r\n            color: inherit\r\n        }\r\n\r\n        & > :nth-child(1) {\r\n            flex: 4;\r\n        }\r\n\r\n        & > :nth-child(2) {\r\n            flex: 2;\r\n        }\r\n\r\n        & > :nth-child(3) {\r\n            flex: 3;\r\n        }\r\n\r\n        & > :nth-child(4) {\r\n            flex: 1;\r\n        }\r\n    }\r\n`;","import React, { useMemo, useContext } from 'react';\r\nimport { groupBy } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { formatCurrency, formatDate } from 'utils';\r\n\r\nimport { List, ListItem } from './BudgetTransactionList.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport API from 'data/fetch';\r\nimport { budgetContext } from 'data/context/budget.context';\r\nimport { Button } from 'components';\r\n\r\n\r\nconst BudgetTransactionList = () => {\r\n    const { data: budget } = useQuery(['budget', { id: 1 }], API.budget.fetchBudget);\r\n    const { data: allCategories } = useQuery(['allCategories'], API.common.fetchAllCategories);\r\n    const { data: budgetedCategories } = useQuery(['budgetedCategories', { id: 1 }], API.budget.fetchBudgetedCategories);\r\n    const history = useHistory();\r\n\r\n\r\n    const { selectedParentCategoryId } = useContext(budgetContext);\r\n\r\n    const { i18n, t } = useTranslation();\r\n    const activeLanguage = i18n.language;\r\n\r\n    const filteredTransactionsBySelectedParentCategory = useMemo(() => {\r\n        if (typeof selectedParentCategoryId === 'undefined') {\r\n            return budget.transactions;\r\n        }\r\n\r\n        if (selectedParentCategoryId === null) {\r\n            return budget.transactions.filter(transaction => {\r\n                const hasBudgetedCategory = budgetedCategories\r\n                    .some(budgetedCategory => budgetedCategory.categoryId === transaction.categoryId);\r\n\r\n                return !hasBudgetedCategory;\r\n            })\r\n        }\r\n\r\n        return budget.transactions\r\n            .filter(transaction => {\r\n                try {\r\n                    const category = allCategories\r\n                        .find(category => category.id === transaction.categoryId);\r\n\r\n                    const parentCategoryName = category.parentCategory.name;\r\n\r\n                    return parentCategoryName === selectedParentCategoryId;\r\n                } catch (error) {\r\n                    return false;\r\n                }\r\n            })\r\n    },\r\n        [allCategories, budgetedCategories, selectedParentCategoryId, budget.transactions]\r\n    );\r\n\r\n    const groupedTransactions = useMemo(() => groupBy(\r\n        filteredTransactionsBySelectedParentCategory,\r\n        transaction => new Date(transaction.date).getUTCDate()\r\n    ),\r\n        [filteredTransactionsBySelectedParentCategory]\r\n    );\r\n\r\n    const editTransactionButtonHandler = (e, transactionId) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`/budget/transaction/${transactionId}/edit`);\r\n    }\r\n\r\n    const deleteTransactionButtonHandler = (e, transactionId) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`/budget/transaction/${transactionId}/delete`);\r\n    }\r\n\r\n\r\n    return (\r\n        <List>\r\n            {Object.entries(groupedTransactions).map(([key, transactions]) => (\r\n                <li key={key}>\r\n                    <ul>\r\n                        {transactions.map(transaction => (\r\n                            <ListItem key={transaction.description}>\r\n                                <Link to={`/budget/transaction/${transaction.id}/details`}>\r\n                                    <div>{transaction.description}</div>\r\n                                    <div>{formatCurrency(transaction.amount, activeLanguage)}</div>\r\n                                    <div>{formatDate(transaction.date, activeLanguage)}</div>\r\n                                    <div>{(allCategories.find(category => category.id === transaction.categoryId) || {}).name}</div>\r\n                                    <div><Button onClick={(e) => editTransactionButtonHandler(e, transaction.id)}>{t('Edit')}</Button></div>\r\n                                    <div><Button onClick={e => deleteTransactionButtonHandler(e, transaction.id)}>{t('Delete')}</Button></div>\r\n                                </Link>\r\n                            </ListItem>\r\n                        ))}\r\n                    </ul>\r\n                </li>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\n\r\nexport default BudgetTransactionList;"],"sourceRoot":""}